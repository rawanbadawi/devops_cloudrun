on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target deployment environment. Acceptable values are 'dev', 'qa', or 'prod'.
      ref:  
        type: string
        required: true
        description: The branch, tag or SHA to checkout.
      gcp_project_id:
        type: string
        required: true
        description: The Google Cloud project ID.
      artifact_registry_repo:
        type: string
        required: true
        description: The artifact registry repository name.
      region:
        type: string
        required: true
        description: The artifact registry region name.
      service_name:
        type: string
        required: true
        description: The container service name.
      code_directory: 
        type: string
        required: true
        description: The directory where the source code lives. 
      cloud_run_sa: 
        type: string
        required: true
        description: The cloudrun attached to this service.  
jobs:
  deploy: 
    name: "Image Build & Cloud Run Deploy"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/504579259344/locations/global/workloadIdentityPools/github/providers/github-actions
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'     # e.g. - tsting@rbadawi-host-vpc.iam.gserviceaccount.com
      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ inputs.region }}-docker.pkg.dev'

      - name: Build and Tag
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.code_directory }}
          push: true 
          tags: |
            ${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}
            ${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:latest
      
      - name: Docker Push
        run: |-
          docker push "${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}"
          docker push "${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:latest"

      - name: Create Service declaration   
        run: |-
          export CONTAINER_IMAGE="${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}"
          export SERVICE_NAME="${{ inputs.service_name }}"
          export PROJECT_ID="${{ inputs.gcp_project_id }}"
          export REVISION_TAG="${{ inputs.ref }}"
          export CLOUD_RUN_SA="${{ inputs.cloud_run_sa }}"
          export ENVIRONMENT="${{ inputs.environment }}"
          envsubst < ./service-yaml/container.yaml > container-${{ inputs.environment }}.yaml       
      - name: Deploy to Cloud Run
        run: |- 
          gcloud run services replace container-${{ inputs.environment }}.yaml --region=${{ inputs.region }} --allow-unauthenticated
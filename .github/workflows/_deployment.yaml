on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target deployment environment. Acceptable values are 'dev', 'qa', or 'prod'.
      ref:  
        type: string
        required: true
        description: The branch, tag or SHA to checkout.
jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$REGION"
        env: 
          REGION: ${{ vars.REGION }}

  # deploy: 
  #   name: "Image Build & Cloud Run Deploy"
  #   runs-on: ubuntu-latest
  #   environment: ${{ inputs.environment }}
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Google Auth
  #       id: auth
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         token_format: 'access_token'
  #         workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/504579259344/locations/global/workloadIdentityPools/github/providers/github-actions
  #         service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'     # e.g. - tsting@rbadawi-host-vpc.iam.gserviceaccount.com
  #     # Authenticate Docker to Google Cloud Artifact Registry
  #     - name: Docker Auth
  #       id: docker-auth
  #       uses: 'docker/login-action@v1'
  #       with:
  #         username: 'oauth2accesstoken'
  #         password: '${{ steps.auth.outputs.access_token }}'
  #         registry: '${{ var.REGION }}-docker.pkg.dev'

  #     - name: Build and Tag
  #       id: build-image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ${{ var.code_directory }}
  #         push: true 
  #         tags: |
  #           ${{ var.REGION }}-docker.pkg.dev/${{ var.GCP_PROJECT_ID }}/${{ var.ARTIFACT_REGISTRY_REPO }}/${{ var.SERVICE_NAME }}:${{ inputs.ref }}
  #           ${{ var.REGION }}-docker.pkg.dev/${{ var.GCP_PROJECT_ID }}/${{ var.ARTIFACT_REGISTRY_REPO }}/${{ var.SERVICE_NAME }}:latest
      
  #     - name: Docker Push
  #       run: |-
  #         docker push "${{ var.REGION }}-docker.pkg.dev/${{ var.GCP_PROJECT_ID }}/${{ var.ARTIFACT_REGISTRY_REPO }}/${{ var.SERVICE_NAME }}:${{ inputs.ref }}"
  #         docker push "${{ var.REGION }}-docker.pkg.dev/${{ var.GCP_PROJECT_ID }}/${{ var.ARTIFACT_REGISTRY_REPO }}/${{ var.SERVICE_NAME }}:latest"

  #     - name: Create Service declaration   
  #       run: |-
  #         export CONTAINER_IMAGE="${{ var.REGION }}-docker.pkg.dev/${{ var.GCP_PROJECT_ID }}/${{ var.ARTIFACT_REGISTRY_REPO }}/${{ var.SERVICE_NAME }}:${{ inputs.ref }}"
  #         export SERVICE_NAME="${{ var.SERVICE_NAME }}"
  #         export PROJECT_ID="${{ var.GCP_PROJECT_ID }}"
  #         export REVISION_TAG="${{ inputs.ref }}"
  #         export CLOUD_RUN_SA="${{ var.CLOUD_RUN_SA }}"
  #         export ENVIRONMENT="${{ inputs.environment }}"
  #         envsubst < ./service-yaml/container.yaml > container-${{ inputs.environment }}.yaml       
  #     - name: Deploy to Cloud Run
  #       run: |- 
  #         gcloud run services replace container-${{ inputs.environment }}.yaml --REGION=${{ var.REGION }} --allow-unauthenticated